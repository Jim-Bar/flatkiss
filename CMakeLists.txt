# Including header files in the targets because from Modern CMake: "The headers will be, for most intents and purposes,
# ignored; the only reason to list them is to get them to show up in IDEs". Refer to:
# https://cliutils.gitlab.io/modern-cmake/chapters/basics.html

cmake_minimum_required(VERSION 3.22)

project(flatkiss)

# Enable clang-tidy for all the targets using the .clang-tidy file.
find_program(CLANG_TIDY_IS_AVAILABLE clang-tidy)
if(CLANG_TIDY_IS_AVAILABLE)
    set(CMAKE_CXX_CLANG_TIDY clang-tidy)
else()
    message(WARNING "Linter rules are disabled because clang-tidy was not found")
endif()

# On some systems (hello macOS!) this directory is not included, so manually add it.
include_directories(/usr/local/include)

find_package(SDL2 REQUIRED)
include_directories(${SDL2_INCLUDE_DIRS})

# List of the targets to build.
set(NAME_MEDIA media)
set(LIBRARY_MEDIA ${PROJECT_NAME}-${NAME_MEDIA})
set(NAME_MODEL model)
set(LIBRARY_MODEL ${PROJECT_NAME}-${NAME_MODEL})

configure_file(
    engine/${PROJECT_NAME}/${PROJECT_NAME}/main.hpp.in
    engine/${PROJECT_NAME}/${PROJECT_NAME}/main.hpp
)

# Files generated by `configure_file()` are put in this directory, so include it.
include_directories(${CMAKE_CURRENT_BINARY_DIR}/engine/${PROJECT_NAME}/${PROJECT_NAME})

add_executable(${PROJECT_NAME}
    engine/${PROJECT_NAME}/${PROJECT_NAME}/character_controller.cpp
    engine/${PROJECT_NAME}/${PROJECT_NAME}/character_controller.hpp
    engine/${PROJECT_NAME}/${PROJECT_NAME}/configuration.cpp
    engine/${PROJECT_NAME}/${PROJECT_NAME}/configuration.hpp
    engine/${PROJECT_NAME}/${PROJECT_NAME}/main.cpp
    engine/${PROJECT_NAME}/${PROJECT_NAME}/main.hpp
)
target_link_libraries(${PROJECT_NAME} ${LIBRARY_MODEL})
target_link_libraries(${PROJECT_NAME} ${LIBRARY_MEDIA})

add_library(${LIBRARY_MEDIA} STATIC
    engine/lib${PROJECT_NAME}-${NAME_MEDIA}/lib${PROJECT_NAME}/${NAME_MEDIA}/keyboard_state.cpp
    engine/lib${PROJECT_NAME}-${NAME_MEDIA}/lib${PROJECT_NAME}/${NAME_MEDIA}/keyboard_state.hpp
    engine/lib${PROJECT_NAME}-${NAME_MEDIA}/lib${PROJECT_NAME}/${NAME_MEDIA}/renderer.cpp
    engine/lib${PROJECT_NAME}-${NAME_MEDIA}/lib${PROJECT_NAME}/${NAME_MEDIA}/renderer.hpp
    engine/lib${PROJECT_NAME}-${NAME_MEDIA}/lib${PROJECT_NAME}/${NAME_MEDIA}/texture.cpp
    engine/lib${PROJECT_NAME}-${NAME_MEDIA}/lib${PROJECT_NAME}/${NAME_MEDIA}/texture.hpp
)
target_include_directories(${LIBRARY_MEDIA} PUBLIC
    engine/lib${PROJECT_NAME}-${NAME_MEDIA}/lib${PROJECT_NAME}/${NAME_MEDIA}
)
target_link_libraries(${LIBRARY_MEDIA} ${LIBRARY_MODEL})
target_link_libraries(${LIBRARY_MEDIA} ${SDL2_LIBRARIES})

add_library(${LIBRARY_MODEL} STATIC
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/action.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/action.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/action_sprite_mapper.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/action_sprite_mapper.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/animation.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/animation.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/animation_player.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/animation_player.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/cardinal_direction.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/cardinal_direction.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/character.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/character.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/collider.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/collider.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/ellipse.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/ellipse.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/level.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/level.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/navigator.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/navigator.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/position.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/position.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/positioned_ellipse.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/positioned_ellipse.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/positioned_rectangle.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/positioned_rectangle.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/positioned_solid.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/positioned_solid.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/rectangle.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/rectangle.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/solid.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/solid.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/spriteset.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/spriteset.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/tile_solid_mapper.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/tile_solid_mapper.hpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/vector.cpp
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}/vector.hpp
)
target_include_directories(${LIBRARY_MODEL} PUBLIC
    engine/lib${PROJECT_NAME}-${NAME_MODEL}/lib${PROJECT_NAME}/${NAME_MODEL}
)

# Setting the C++ version, from Modern CMake:
# https://cliutils.gitlab.io/modern-cmake/chapters/features/cpp11.html
target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_20)
set_target_properties(${PROJECT_NAME} PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(${LIBRARY_MODEL} PUBLIC cxx_std_20)
set_target_properties(${LIBRARY_MODEL} PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(${LIBRARY_MEDIA} PUBLIC cxx_std_20)
set_target_properties(${LIBRARY_MEDIA} PROPERTIES CXX_EXTENSIONS OFF)
